i=i+1
mudiff_2[i]=y
a_2=pwr.t2n.test(n1=N1_2 , n2=N2_2 , d=y/sigma , sig.level =0.05 )
power_2[i]=a_2[[5]]
}
plot(mudiff_2,power_2,type="b")
points(mudiff_2,power_2,type="b",col="red")
plot(mudiff_2,power_2,type="b",col="grey")
points(mudiff_2,power_2,type="b",col="green")
plot(mudiff_2,power_2,type="b",col="grey")
points(mudiff_2,power_2,type="b",col="green")
plot(mudiff_2,power_2,type="b",col="grey")
points(mudiff,power,type="b",col="green")
library(pwr)
N1<-50
N2<-60
length=length(seq(from=-2, to=2, by=0.1))
m<-length
diff=rep(0,m)
power=rep(0,m)
sigma=2
i=0
for (y in seq(from=-2, to=2, by=0.1)){
i=i+1
diff[i]=y
a=pwr.t2n.test(n1=N1 , n2=N2 , d=y/sigma , sig.level =0.05 )
power[i]=a[[5]]
}
plot(diff,power,type="b")
N1_2<-100
N2_2<-120
length=length(seq(from=-2, to=2, by=0.1))
m<-length
diff_2=rep(0,m)
power_2=rep(0,m)
sigma=2
i=0
for (y in seq(from=-2, to=2, by=0.1)){
i=i+1
diff_2[i]=y
a_2=pwr.t2n.test(n1=N1_2 , n2=N2_2 , d=y/sigma , sig.level =0.05 )
power_2[i]=a_2[[5]]
}
plot(diff_2,power_2,type="b",col="grey")
points(diff,power,type="b",col="green")
N1_3=310
N2_3=1.2*N1_3
sigma=2
diff_3=0.5
x<-pwr.t2n.test(n1=N1_3 , n2=N2_3 , d=diff_3/sigma , sig.level =0.05 )
x
library(pwr)
mu1<-10
mu2<-10
mu3<-10
sigma<-0.5
n=50
p=1/3
mu=(mu1+mu2+mu3)/3
f=sqrt(((1/3)*(mu1-mu)^2+(1/3)*(mu2-mu)^2+(1/3)*(mu3-mu)^2)/sigma^2)
b<-pwr.anova.test(k =3 , n =n , f =f , sig.level =0.05)
show(b)
mu1<-10
mu2<-10
mu3<-11
sigma<-0.5
n=20
p=1/3
mu=(mu1+mu2+mu3)/3
f=sqrt(((1/3)*(mu1-mu)^2+(1/3)*(mu2-mu)^2+(1/3)*(mu3-mu)^2)/sigma^2)
library(pwr)
#http://www.statmethods.net/stats/power.html
b<-pwr.anova.test(k =3 , n =n , f =f , sig.level =0.05)
show(b)
mu1<-10
mu2<-10
mu3<-11
sigma<-0.5
n=10
p=1/3
mu=(mu1+mu2+mu3)/3
f=sqrt(((1/3)*(mu1-mu)^2+(1/3)*(mu2-mu)^2+(1/3)*(mu3-mu)^2)/sigma^2)
library(pwr)
#http://www.statmethods.net/stats/power.html
b<-pwr.anova.test(k =3 , n =n , f =f , sig.level =0.05)
show(b)
mu1<-10
mu2<-10
mu3<-11
sigma<-2
n=10
p=1/3
mu=(mu1+mu2+mu3)/3
f=sqrt(((1/3)*(mu1-mu)^2+(1/3)*(mu2-mu)^2+(1/3)*(mu3-mu)^2)/sigma^2)
library(pwr)
#http://www.statmethods.net/stats/power.html
b<-pwr.anova.test(k =3 , n =n , f =f , sig.level =0.05)
show(b)
b<-pwr.anova.test(k =3 , f =f , sig.level =0.05, power=0.9)
show(b)
mu1<-10
mu2<-10
mu3<-11
sigma<-2
n=10
p=1/3
mu=(mu1+mu2+mu3)/3
f=sqrt(((1/3)*(mu1-mu)^2+(1/3)*(mu2-mu)^2+(1/3)*(mu3-mu)^2)/sigma^2)
library(pwr)
#http://www.statmethods.net/stats/power.html
b<-pwr.anova.test(k =3 , f =f , sig.level =0.05, power=0.9)
show(b)
b<-pwr.anova.test(k =3 , f =f , sig.level =0.05, power=0.95)
show(b)
D=0.5^2/4
D
n=(2000*4)/(1999*D+4)
n
CI=2*sqrt((1-200/2000)*4/200)
CI
u=4.6+0.268
u
l=4.6-0.268
l
yst=(80/200)*4+(120/200)*5
yst
D=9/4
D
a=(22*20 + 36*10)^2
a
b=58^2*2.25
b
c=22*20^2+36*10^2
c
n=a/(b+c)
n
a=22*20 + 36*10
a
n1=n*(22*20/a)
n1
n2=n*(36*10/a)
n2
vhat=0.5*0.5/250 + 0.38*0.62/190
vhat
err=2*sqrt(vhat)
err
a=0.4+0.6*4
a
b=(1-0.4)+(1-0.6)*4
b
yst=(80/2000)*4+(120/2000)*5
yst
yst=(1000/2000)*4+(1000/2000)*5
yst
a=0.5+0.5*4
a
b=(1-0.5)+(1-0.5)*4
b
vp=1/200*(1-1/10)*2.5+(1/200^2)*2.5
vp
b=2*sqrt(vp)
b
?rnorm
?aov
seed(123)
n = 8
mu1<-1600
mu2<-1600
mu3<-1650
mu4<-1500
sigma<-100
y1 = rnorm( n , mu1 , sigma )
y2 = rnorm( n , mu2 , sigma )
y3 = rnorm( n , mu3 , sigma )
y4 = rnorm( n , mu4 , sigma )
x1 = rep( 1 , n )
x2 = rep( 2 , n )
x3 = rep( 3 , n )
x4 = rep( 4 , n )
x = c(x1,x2,x3,x4)
y = c(y1,y2,y3,y4)
set.seed(123)
n = 8
mu1<-1600
mu2<-1600
mu3<-1650
mu4<-1500
sigma<-100
y1 = rnorm( n , mu1 , sigma )
y2 = rnorm( n , mu2 , sigma )
y3 = rnorm( n , mu3 , sigma )
y4 = rnorm( n , mu4 , sigma )
x1 = rep( 1 , n )
x2 = rep( 2 , n )
x3 = rep( 3 , n )
x4 = rep( 4 , n )
x = c(x1,x2,x3,x4)
y = c(y1,y2,y3,y4)
anovaResults = summary( aov( y ~ x ) )
summary( aov( y ~ x ) )
anovaResults[[1]][[5]][[1]]
str(aov(y~x))
set.seed(123)
n = 5
mu1<-1600
mu2<-1600
mu3<-1650
mu4<-1500
sigma<-100
set.seed(123)
n = 5
mu1<-1600
mu2<-1600
mu3<-1650
mu4<-1500
sigma<-100
rejCount=0
for (i in 1:1000)
{
y1 = rnorm( n , mu1 , sigma )
y2 = rnorm( n , mu2 , sigma )
y3 = rnorm( n , mu3 , sigma )
y4 = rnorm( n , mu4 , sigma )
x1 = rep( 1 , n )
x2 = rep( 2 , n )
x3 = rep( 3 , n )
x4 = rep( 4 , n )
x = c(x1,x2,x3,x4)
y = c(y1,y2,y3,y4)
anovaResults = summary( aov( y ~ x ) )
PV<-anovaResults[[1]][[5]][[1]]
if(PV<0.05) rejCount<-rejCount+1
print(PV)
}
print(rejCount)
power<-rejCount/1000
power
L1=list("steve",59,"M",c(1,1,1))
L1[[4]][[3]]
mylist=list(L1,L2,L3)
L2=list("bill",64,"M",c(0,0,0))
L3=list("mary",59,"F",c(0,1,1))
mylist=list(L1,L2,L3)
mylist[[1]][[4]][[3]]
str(mylist)
set.seed(123)
beta0=-3.67
beta1=0.077
beta2=-0.5
n1=100
n2=100
x1=rgeom(n1,1/10)
x2=rgeom(n2,1/10)
x1
x2
t1=rep(0,n1)
t2=rep(1,n2)
y1=rep(0,n1)
y2=rep(0,n2)
for (i in 1:n1)
{
y1[i]=rbinom(1,1,p(x[i],0))
}
y1
for (i in 1:n2)
{
y2[i]=rbinom(1,1,p(x2[i],1))
}
y2
x2
x<-c(x1,x2)
t<-c(t1,t2)
y<-c(y1,y2)
fit=glm(y~x+t,family=binomial)
summary(fit)
p<-function(x,t)
{
beta0=-3.67
beta1=0.077
beta2=-0.5
logodds=beta0+beta1*x+beta2*t
return(exp(logodds)/(1+exp(logodds)))
}
set.seed(123)
beta0=-3.67
beta1=0.077
beta2=-0.5
n1=100
n2=100
x1=rgeom(n1,1/10)
x2=rgeom(n2,1/10)
x1
x2
t1=rep(0,n1)
t2=rep(1,n2)
y1=rep(0,n1)
y2=rep(0,n2)
for (i in 1:n1)
{
y1[i]=rbinom(1,1,p(x[i],0))
}
y1
for (i in 1:n2)
{
y2[i]=rbinom(1,1,p(x2[i],1))
}
y2
x2
x<-c(x1,x2)
t<-c(t1,t2)
y<-c(y1,y2)
fit=glm(y~x+t,family=binomial)
summary(fit)
str(b)
b<-summary(fit)
str(b)
b[[12]]
str(b[[12]])
b[[12]][[3,4]]
myts <- ts(myvector, start=c(2009, 1), end=c(2014, 12), frequency=12)
N = 50                 # There are 90 Plants
n = 10                  # 5 plants are selected at random
M = c(52,56,60,46,49,51,50,61,60,45)  # No. machines in 5 sel. plants
m = c(5,6,6,5,5,5,5,6,6,6)       # No. machines selected in 5 plants
MM = N*mean(M)       # Use an estimate of MM
Mbar = MM/N          # Average number of plots per area
Mbarhat = sum(M)/n
y = list( c(12, 11, 12, 10, 13) , c(10, 9, 7, 9, 8,10) ,
c(6, 5, 7, 5, 6, 4) , c(7, 8, 7, 7, 6) , c(10, 11, 13, 12, 12),
c(14, 15, 13, 12, 13),c(6, 7, 6, 8, 7),c(9, 10, 8, 9, 9, 10),
c(7, 10, 8, 9, 9, 10),c(12, 11, 12, 13, 12, 12))
ybar = rep(0,n)
sd = rep(0,n)
for (i in 1:n)
{
ybar[i] = mean( y[[i]] )
sd[i]   = sd( y[[i]] )
}
muhat = (N/MM) * sum( M*ybar ) / n
s1 = 0
for (i in 1:n)
{
s1 = s1 + (M[i]*ybar[i] - Mbar*muhat)^2
}
sbSquared = s1/(n-1)
s2 = 0
for (i in 1:n)
{
s2 = s2 + M[i]^2*(1-m[i]/M[i])*sd[i]^2/m[i]
}
Vhat = (1-n/N)*(1/(n*Mbar^2))*sbSquared +
(1/(n*N*Mbar^2))*s2
MOE = 2*sqrt(Vhat)
print( c( muhat , MOE ) )
muhat-MOE
muhat+MOE
N = 30                 # There are 90 Plants
n = 7                  # 5 plants are selected at random
MM = 720              # There are 4522 machines across
# all 90 plants
M = c(22,25,28,25,21,28,26)  # No. machines in 5 sel. plants
m = c(5,5,5,5,5,5,5)       # No. machines selected in 5 plants
Mbar = MM/N            # Avg. number of machines per plant
ybar=c(23.2,19.8,12.0,25.6,16.8,13.2,20.8)
muhat = (N/MM) * sum( M*ybar ) / n
muhat
(200*3.2+500*2+200*1.4)/900
muhat=(200*3.2+500*2+200*1.4)/900
muhat=(300*3.2+500*2+200*1.4)/1000
muhat
a=0.3*4+0.5*4+0.3*4
a
a=0.3*4+0.5*4+0.2*4
a
b=0.7*4+0.5*4+0.8*4
b
v=1/400(1-400/1000)*a+(1/400^2)*8
v
v=(1/400)*(1-400/1000)*a+(1/400^2)*8
v
MOE=2*sqrt(v)
MOE
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
install.packages("WGCNA")
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
n=((6000^2*0.25/0.6)+(4000^2*0.25/0.4))/(10000^2*0.0009+6000*0.25+4000*0.25)
n1=0.06*271
n1=0.6*271
n=((6000^2*0.25/0.6)+(4000^2*0.25/0.4))/(10000^2*(0.08^2/4)+6000*0.25+4000*0.25)
n1=(6000*0.25)/((6000-1)*0.0016+0.25)
n2=(4000*0.25)/((4000-1)*0.0016+0.25)
N11    = 30000
n11    = 100
ybar11 = 5
sd11   = 2
N12    = 30000
n12    = 200
ybar12 = 6
sd12   = 2
N21    = 20000
n21    = 300
ybar21 = 3
sd21   = 2
N22    = 20000
n22    = 400
ybar22 = 3
sd22   = 2
N = N11 + N12 + N21 + N22
n = n11 + n12 + n21 + n22
ybar =(30000*5+30000*6+20000*3+20000*3)/100000
A11 = N11/N
A12 = N12/N
A21 = N21/N
A22 = N22/N
ybarST = A11*ybar11 + A12*ybar12 + A21*ybar21 + A22*ybar22
sum1 = A11*sd11^2 + A12*sd12^2 + A21*sd21^2 + A22*sd22^2
sum2 = (1-A11)*sd11^2 + (1-A12)*sd12^2 + (1-A21)*sd21^2 +
(1-A22)*sd22^2
Vhat = (1/n)*(1-n/N)*sum1 + (1/n^2)*sum2
Vhat
LCL = ybarST - 2*sqrt(Vhat)
UCL = ybarST + 2*sqrt(Vhat)
print( c(LCL,ybarST,UCL) )
2*sqrt(Vhat)
2*sqrt(Vhat)
ybarST = A11*ybar11 + A12*ybar12 + A21*ybar21 + A22*ybar22
ybarST
library(Biobase)
library(GEOquery)
gset<-getGEO("GSE770", GSEMatrix =TRUE)
gset<-gset[[1]]
show(gset)
str(gset)
e<-exprs(gset)
e<-data.frame(exprs(gset))
View(e)
View(e)
boxplot(log(e))
boxplot(log(e))
symb<-gset@featureData @data $"Gene Symbol"
symb<-as.character(symb)
sel<-apply(as.matrix(symb,ncol=1),1,
function(x){if(x=="")return(FALSE)else return(TRUE)})
levels(as.factor(sel))
selexpr<-c()
selsymb<-c()
for (i in 1:nrow(e)){
if (sel[i]){
selexpr<-rbind(selexpr,e[i,])
selsymb<-rbind(selsymb,symb[i])
}
}
selexpr<-data.frame(selexpr)
ave<-aggregate(selexpr, by=list(selsymb),
FUN=mean)
rows<-ave[,1]
ave[,1]<-NULL
rownames(ave)<-rows
View(ave)
View(ave)
setwd("C:/Users/Yinjiao/Dropbox/Yinjiao-Ma/05-Static-Dynamic/Prostate cancer")
write.table(x =ave, file ="ave_GSE770.csv", sep =',', col.names=NA,row.names=T, quote = F, na = '')
static<-read.csv('ave_allcancer_Static.csv',header=T)
View(static)
View(ave)
View(static)
m1 <- merge(ave, static, by.x = "row.names", by.y = "X")
View(`m1`)
write.table(x =m1, file = 'GSE770_Time_series.csv', sep =',',col.names=NA, row.names=T, quote = F, na = '')
View(`m1`)
rows<-m1[,1]
rows
rows<-m1[,1]
m1[,1]<-NULL
rownames(m1)<-rows
View(`m1`)
write.table(x =m1, file = 'GSE770_Time_series.csv', sep =',',col.names=NA, row.names=T, quote = F, na = '')
setwd("C:/Users/ZTQ/Dropbox/Yinjiao-Ma/05-Static-Dynamic/Prostate cancer")
a30<-read.table("t_static_0.3.txt",header=F)
a30_col2<-as.data.frame(a30[,2])
colnames(a30_col2)<-c("Gene ID")
b30<-unique(a30_col2)
a30<-read.table("t_static_0.32.txt",header=F)
a30_col2<-as.data.frame(a30[,2])
colnames(a30_col2)<-c("Gene ID")
b30<-unique(a30_col2)
a30<-read.table("t_static_0.34.txt",header=F)
a30_col2<-as.data.frame(a30[,2])
colnames(a30_col2)<-c("Gene ID")
b30<-unique(a30_col2)
a34<-read.table("t_static_0.34.txt",header=F)
a34_col2<-as.data.frame(a34[,2])
colnames(a34_col2)<-c("Gene ID")
b34<-unique(a34_col2)
b34t<-t(b34)
write.table(b34t,"b34t.txt",col.names = F,row.names = T,sep=",",quote = T)
m<-read.csv('GSE7701_10 GSE4196911_650.csv',header=T)
rows<-m[,1]
m[,1]<-NULL
rownames(m)<-rows
time<-m[,1:10]
View(m)
View(time)
t_time<-data.frame(t(time))
time0.34<-t_time[,c("ABCA5","ALOX15","ALOX15B","ANPEP","CNTNAP2",
"ERG","F5","FASN","FGFR2","FOLH1","GDF15","GHR",
"HPGD","HPN","IL6","IL8","KRT15","KRT5","MMP7",
"NAT1","PIK3R2","PLA2G7","PLAUR","PLN","RARRES1",
"SERPINB5","TRIM29")]
write.table(time0.34,"Time0.34_27genes.txt",col.names = T,row.names = F,sep="\t",quote = F)
